{
  "duration_minutes": 45,
  "multiple_choice": [
    {
      "id": "q1",
      "question": "Which cloud computing service model provides virtualized computing resources over the internet?",
      "choices": ["SaaS", "PaaS", "IaaS", "FaaS"],
      "answer_index": 2
    },
    {
      "id": "q2",
      "question": "What does AWS S3 primarily provide?",
      "choices": ["Virtual machines", "Object storage", "Database hosting", "Load balancing"],
      "answer_index": 1
    },
    {
      "id": "q3",
      "question": "In RAG (Retrieval-Augmented Generation), what is the primary purpose of the retrieval component?",
      "choices": ["Generate new text", "Store embeddings", "Fetch relevant context", "Train the model"],
      "answer_index": 2
    },
    {
      "id": "q4",
      "question": "Which vector database is commonly used for storing embeddings in RAG systems?",
      "choices": ["MySQL", "PostgreSQL", "Pinecone", "Redis"],
      "answer_index": 2
    },
    {
      "id": "q5",
      "question": "What does NLP stand for?",
      "choices": ["Natural Language Processing", "Neural Learning Protocol", "Network Layer Protocol", "Numerical Linear Programming"],
      "answer_index": 0
    },
    {
      "id": "q6",
      "question": "Which technique is commonly used for text preprocessing in NLP?",
      "choices": ["Normalization", "Tokenization", "Lemmatization", "All of the above"],
      "answer_index": 3
    },
    {
      "id": "q7",
      "question": "What type of AI system can learn and improve from experience without being explicitly programmed?",
      "choices": ["Expert systems", "Machine learning", "Rule-based systems", "Knowledge graphs"],
      "answer_index": 1
    },
    {
      "id": "q8",
      "question": "Which AI technique is primarily used for image recognition tasks?",
      "choices": ["Decision trees", "Linear regression", "Convolutional Neural Networks", "K-means clustering"],
      "answer_index": 2
    },
    {
      "id": "q9",
      "question": "What is the main difference between supervised and unsupervised learning?",
      "choices": ["Supervised uses labeled data", "Unsupervised is faster", "Supervised is more accurate", "No significant difference"],
      "answer_index": 0
    },
    {
      "id": "q10",
      "question": "Which algorithm is commonly used for classification problems in machine learning?",
      "choices": ["K-means", "Random Forest", "PCA", "DBSCAN"],
      "answer_index": 1
    },
    {
      "id": "q11",
      "question": "Which HTTP status code indicates a successful API request?",
      "choices": ["404", "500", "200", "401"],
      "answer_index": 2
    },
    {
      "id": "q12",
      "question": "What is the purpose of middleware in backend API development?",
      "choices": ["Store data", "Process requests between client and server", "Generate HTML", "Manage databases"],
      "answer_index": 1
    }
  ],
  "coding": {
    "id": "code1",
    "language": "python",
    "function_name": "group_keys_by_frequency",
    "title": "Group keys by frequency k",
    "prompt": "Given a dictionary where keys are alphabets and values are integers, and a value k, write a dynamic Python function that works for any such dictionary of arbitrary length 0 < n < 1000 and returns the expected output based on the value of k.\n\ninput_dict = {\"a\":8, \"b\":5, \"c\":8, \"d\":4, \"e\":7, \"f\":7, \"g\":1, \"h\":9, \"j\":3}\nk=2\n#output for k=3 []\n#output for k=2 [['a', 'c'], ['e', 'f']]\n#output for k=1 [['b'], ['d'], ['g'], ['h'], ['j']]",
    "function_signature": "def group_keys_by_frequency(input_dict, k):\n    # Write your code here\n    pass\n",
    "reference_tests": [
      {
        "input_dict": {"a":8, "b":5, "c":8, "d":4, "e":7, "f":7, "g":1, "h":9, "j":3},
        "k": 3,
        "expected": []
      },
      {
        "input_dict": {"a":8, "b":5, "c":8, "d":4, "e":7, "f":7, "g":1, "h":9, "j":3},
        "k": 2,
        "expected": [["a", "c"], ["e", "f"]]
      },
      {
        "input_dict": {"a":8, "b":5, "c":8, "d":4, "e":7, "f":7, "g":1, "h":9, "j":3},
        "k": 1,
        "expected": [["b"], ["d"], ["g"], ["h"], ["j"]]
      },
      {
        "input_dict": {"x":2, "y":2, "z":2, "w":3},
        "k": 3,
        "expected": [["x", "y", "z"]]
      }
    ]
  }
}
